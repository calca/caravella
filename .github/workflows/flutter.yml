name: Android CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [published]

jobs:
  build:
    if: github.event_name != 'release'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - name: Decode keystore from secret
        run: |
          echo "$KEYSTORE_BASE64" | base64 -d > android/app/upload-keystore.jks
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
      - name: Configure signing properties
        run: |
          echo "storeFile=upload-keystore.jks" > android/key.properties
          echo "storePassword=$KEYSTORE_PASSWORD" >> android/key.properties
          echo "keyAlias=$KEY_ALIAS" >> android/key.properties
          echo "keyPassword=$KEY_PASSWORD" >> android/key.properties
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
      - name: Install dependencies
        run: flutter pub get
      - name: Analyze
        run: flutter analyze
      - name: Run tests
        run: flutter test
      - name: Build staging APK (signed)
        run: flutter build apk --flavor staging --release --dart-define=FLAVOR=staging
      - name: Get app version
        id: get_version
        run: |
          VERSION=$(grep '^version:' pubspec.yaml | sed 's/version: //;s/\+.*//')
          echo "VERSION=$VERSION" >> $GITHUB_ENV
      - name: Get current date
        id: get_date
        run: echo "DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
      - name: Rename APK
        run: |
          mv build/app/outputs/flutter-apk/app-staging-release.apk org_app_caravella-staging-$VERSION-$DATE.apk
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: org_app_caravella-staging-apk
          path: org_app_caravella-staging-*.apk

  release:
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          token: ${{ secrets.GH_PAT }}
          fetch-depth: 0
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - name: Decode keystore from secret
        run: |
          echo "$KEYSTORE_BASE64" | base64 -d > android/app/upload-keystore.jks
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
      - name: Configure signing properties
        run: |
          echo "storeFile=upload-keystore.jks" > android/key.properties
          echo "storePassword=$KEYSTORE_PASSWORD" >> android/key.properties
          echo "keyAlias=$KEY_ALIAS" >> android/key.properties
          echo "keyPassword=$KEY_PASSWORD" >> android/key.properties
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
      - name: Install dependencies
        run: flutter pub get
      - name: Determine build flavor
        id: determine_flavor
        run: |
          if [[ "${{ github.event.release.prerelease }}" == "true" ]]; then
            echo "FLAVOR=staging" >> $GITHUB_ENV
            echo "BUILD_TYPE=staging" >> $GITHUB_ENV
            echo "APK_NAME=app-staging-release.apk" >> $GITHUB_ENV
            echo "FILE_PREFIX=org_app_caravella-staging" >> $GITHUB_ENV
          else
            echo "FLAVOR=prod" >> $GITHUB_ENV
            echo "BUILD_TYPE=production" >> $GITHUB_ENV
            echo "APK_NAME=app-prod-release.apk" >> $GITHUB_ENV
            echo "FILE_PREFIX=org_app_caravella" >> $GITHUB_ENV
          fi
      - name: Build APK (signed)
        run: flutter build apk --flavor ${{ env.FLAVOR }} --release --dart-define=FLAVOR=${{ env.FLAVOR }}
      - name: Get app version
        id: get_version
        run: |
          VERSION=$(grep '^version:' pubspec.yaml | sed 's/version: //;s/\+.*//')
          echo "VERSION=$VERSION" >> $GITHUB_ENV
      - name: Get current date
        id: get_date
        run: echo "DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
      - name: Rename APK
        run: |
          mv build/app/outputs/flutter-apk/${{ env.APK_NAME }} ${{ env.FILE_PREFIX }}-$VERSION-$DATE.apk
      - name: Upload APK to Release
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ env.FILE_PREFIX }}-*.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
      - name: Bump version and versionCode in pubspec.yaml
        run: |
          VERSION_LINE=$(grep '^version:' pubspec.yaml)
          VERSION_FULL=$(echo "$VERSION_LINE" | sed 's/version: //')
          VERSION_NUM=$(echo "$VERSION_FULL" | cut -d'+' -f1)
          VERSION_CODE=$(echo "$VERSION_FULL" | cut -d'+' -f2)
          # Increment patch version (es: 1.0.0 -> 1.0.1)
          IFS='.' read -r MAJOR MINOR PATCH <<< "$(echo $VERSION_NUM)"
          PATCH=$((PATCH + 1))
          NEW_VERSION_NUM="$MAJOR.$MINOR.$PATCH"
          NEW_CODE=$((VERSION_CODE + 1))
          sed "s/^version: .*/version: $NEW_VERSION_NUM+$NEW_CODE/" pubspec.yaml > pubspec.yaml.tmp
          mv pubspec.yaml.tmp pubspec.yaml
          echo "Bumped version to $NEW_VERSION_NUM+$NEW_CODE"
          echo "NEW_VERSION_NUM=$NEW_VERSION_NUM" >> $GITHUB_ENV
          echo "NEW_CODE=$NEW_CODE" >> $GITHUB_ENV
      - name: Commit and push version bump
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          
          # Assicurati di essere sul branch main
          git checkout main
          
          # Commit e push
          git add pubspec.yaml
          git commit -m "Bump version to $NEW_VERSION_NUM+$NEW_CODE [skip ci]" || echo "No changes to commit"
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
